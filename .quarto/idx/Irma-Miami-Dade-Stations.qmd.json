{"title":"MiamiDadeStations","markdown":{"yaml":{"title":"MiamiDadeStations","author":"Victorious","format":"html"},"headingText":"Load and Data for Completeness. Visualize","containsRefs":false,"markdown":"\n\n\n\n\n```{r}\n#| echo: false\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n# lubridate - R library for converting date objects\nlibrary(lubridate)\nlibrary(tidyr)\n\n# Load dataset\nmydata <- read.csv(\"Corrected_Ozone_Data_for_Rosenstiel_and_Perdue_Stations.csv\")\n#str(mydata)\n#summary(mydata)\n\n# Convert date column from chr to date type\nmydata$Date_Rosenstiel <- as.Date(mydata$Date_Rosenstiel, format = \"%m/%d/%Y\")\nmydata$Date_Perdue <- as.Date(mydata$Date_Perdue, format = \"%m/%d/%Y\")\n\n#Pipe my dataset into Select() to reduce the size by selecting the enclosed columns\n# Reshape data to long format for ggplot2 - name it data_long and pipe into pivot_longer\ndata_long <- mydata %>%\n  select(Date_Rosenstiel, Max_Ozone_Concentration_Rosenstiel, \n         Date_Perdue, Max_Ozone_Concentration_Perdue) %>%\n  pivot_longer(\n    cols = c(Max_Ozone_Concentration_Rosenstiel, Max_Ozone_Concentration_Perdue),\n    names_to = \"Station\",\n    values_to = \"Ozone_Concentration\",\n    names_prefix = \"Max_Ozone_Concentration_\"\n  ) %>%\n  mutate(\n    Date = ifelse(Station == \"Rosenstiel\", Date_Rosenstiel, Date_Perdue),\n    Date = as.Date(Date)\n  )\n\n# Now load mydata with missing data points highlighted\nggplot(data_long, aes(x = Date, y = Ozone_Concentration, color = Station)) +\n  geom_line() +\n  geom_point(data = filter(data_long, is.na(Ozone_Concentration) == FALSE), aes(x = Date, y = 0), \n             color = \"red\", shape = 4, size = 3) +\n  scale_y_continuous(name = \"Max Ozone Concentration (ppm)\", limits = c(0, max(data_long$Ozone_Concentration, na.rm = TRUE))) +\n  scale_x_date(name = \"Date\", date_breaks = \"1 month\", date_labels = \"%b %Y\") +\n  labs(\n    title = \"Ozone Concentration with Missing Data Points for Rosenstiel and Perdue Stations\",\n    caption = \"Initial dataset validation reveals a data gap during September, aligning with the period of Hurricane Irma.\"\n    \n  ) +\n  theme_minimal() +\n  theme(legend.position = \"top\", axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n```\n\n\n\n```{r}\n#| echo: false\n\n# Load the necessary packages\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Load the dataset and rename it to avoid conflicts\nmydata <- read.csv(\"Normalized_Hurricane_Irma_September_2017.csv\", stringsAsFactors = FALSE)\n\n# Convert the Date columns to Date type using the correct format\nmydata$Date <- as.Date(mydata$Date, format = \"%m/%d/%Y\")\nmydata$Date.1 <- as.Date(mydata$Date.1, format = \"%m/%d/%Y\")\n\n# Filter out rows where Date is NA\nmydata <- mydata %>%\n  filter(!is.na(Date)) %>%\n  mutate(\n    Missing_Rosenstiel = is.na(Daily.Max.8.hour.Ozone.Concentration),\n    Missing_Perdue = is.na(Daily.Max.8.hour.Ozone.Concentration.1)\n  )\n\n# Create the plot \nggplot(mydata, aes(x = Date)) +\n  geom_line(aes(y = Daily.Max.8.hour.Ozone.Concentration, color = \"Rosenstiel\")) +\n  geom_point(data = dplyr::filter(mydata, Missing_Rosenstiel == FALSE), aes(y = Daily.Max.8.hour.Ozone.Concentration), color = \"red\", shape = 4, size = 3) +\n  \n  geom_line(aes(y = Daily.Max.8.hour.Ozone.Concentration.1, color = \"Perdue\")) +\n  geom_point(data = dplyr::filter(mydata, Missing_Perdue == FALSE), aes(y = Daily.Max.8.hour.Ozone.Concentration.1), color = \"blue\", shape = 4, size = 3) +\n  \n  labs(\n  title = \"Daily Max 8-hour Ozone Concentration showing Missing Data (September 2017)\",\n  caption = \"Data collected from Rosenstiel and Perdue stations with intermittent data gaps, likely due to disruptions from Hurricane Irma's impact on monitoring equipment.\",\n  x = \"Date\",\n  y = \"Ozone Concentration (ppm)\"\n) +\n\n  \n  # Set x-axis to show all dates in September\n  scale_x_date(date_breaks = \"1 day\", date_labels = \"%b %d\") +\n  \n  scale_color_manual(values = c(\"Rosenstiel\" = \"green\", \"Perdue\" = \"orange\")) +\n  \n  theme_minimal() +\n  theme(legend.title = element_blank()) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n \n\n\n```\n\n## Plot pre and post hurricane Irma (August, October)\n\n\n\n\n\n\n```{r}\n#| echo: false\n\nlibrary(ggplot2)\nlibrary(dplyr)\n# Load the dataset\nmydata <- read.csv(\"Corrected_Ozone_Data_for_Rosenstiel_and_Perdue_Stations.csv\", stringsAsFactors = FALSE)\n#print(mydata)\n# Convert the Date columns to Date type\nmydata$Date_Rosenstiel <- as.Date(mydata$Date_Rosenstiel, format = \"%m/%d/%Y\")\nmydata$Date_Perdue <- as.Date(mydata$Date_Perdue, format = \"%m/%d/%Y\")\n\n\n\n\n```\n\n\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n## Load and Data for Completeness. Visualize\n\n\n\n```{r}\n#| echo: false\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n# lubridate - R library for converting date objects\nlibrary(lubridate)\nlibrary(tidyr)\n\n# Load dataset\nmydata <- read.csv(\"Corrected_Ozone_Data_for_Rosenstiel_and_Perdue_Stations.csv\")\n#str(mydata)\n#summary(mydata)\n\n# Convert date column from chr to date type\nmydata$Date_Rosenstiel <- as.Date(mydata$Date_Rosenstiel, format = \"%m/%d/%Y\")\nmydata$Date_Perdue <- as.Date(mydata$Date_Perdue, format = \"%m/%d/%Y\")\n\n#Pipe my dataset into Select() to reduce the size by selecting the enclosed columns\n# Reshape data to long format for ggplot2 - name it data_long and pipe into pivot_longer\ndata_long <- mydata %>%\n  select(Date_Rosenstiel, Max_Ozone_Concentration_Rosenstiel, \n         Date_Perdue, Max_Ozone_Concentration_Perdue) %>%\n  pivot_longer(\n    cols = c(Max_Ozone_Concentration_Rosenstiel, Max_Ozone_Concentration_Perdue),\n    names_to = \"Station\",\n    values_to = \"Ozone_Concentration\",\n    names_prefix = \"Max_Ozone_Concentration_\"\n  ) %>%\n  mutate(\n    Date = ifelse(Station == \"Rosenstiel\", Date_Rosenstiel, Date_Perdue),\n    Date = as.Date(Date)\n  )\n\n# Now load mydata with missing data points highlighted\nggplot(data_long, aes(x = Date, y = Ozone_Concentration, color = Station)) +\n  geom_line() +\n  geom_point(data = filter(data_long, is.na(Ozone_Concentration) == FALSE), aes(x = Date, y = 0), \n             color = \"red\", shape = 4, size = 3) +\n  scale_y_continuous(name = \"Max Ozone Concentration (ppm)\", limits = c(0, max(data_long$Ozone_Concentration, na.rm = TRUE))) +\n  scale_x_date(name = \"Date\", date_breaks = \"1 month\", date_labels = \"%b %Y\") +\n  labs(\n    title = \"Ozone Concentration with Missing Data Points for Rosenstiel and Perdue Stations\",\n    caption = \"Initial dataset validation reveals a data gap during September, aligning with the period of Hurricane Irma.\"\n    \n  ) +\n  theme_minimal() +\n  theme(legend.position = \"top\", axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n```\n\n\n\n```{r}\n#| echo: false\n\n# Load the necessary packages\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Load the dataset and rename it to avoid conflicts\nmydata <- read.csv(\"Normalized_Hurricane_Irma_September_2017.csv\", stringsAsFactors = FALSE)\n\n# Convert the Date columns to Date type using the correct format\nmydata$Date <- as.Date(mydata$Date, format = \"%m/%d/%Y\")\nmydata$Date.1 <- as.Date(mydata$Date.1, format = \"%m/%d/%Y\")\n\n# Filter out rows where Date is NA\nmydata <- mydata %>%\n  filter(!is.na(Date)) %>%\n  mutate(\n    Missing_Rosenstiel = is.na(Daily.Max.8.hour.Ozone.Concentration),\n    Missing_Perdue = is.na(Daily.Max.8.hour.Ozone.Concentration.1)\n  )\n\n# Create the plot \nggplot(mydata, aes(x = Date)) +\n  geom_line(aes(y = Daily.Max.8.hour.Ozone.Concentration, color = \"Rosenstiel\")) +\n  geom_point(data = dplyr::filter(mydata, Missing_Rosenstiel == FALSE), aes(y = Daily.Max.8.hour.Ozone.Concentration), color = \"red\", shape = 4, size = 3) +\n  \n  geom_line(aes(y = Daily.Max.8.hour.Ozone.Concentration.1, color = \"Perdue\")) +\n  geom_point(data = dplyr::filter(mydata, Missing_Perdue == FALSE), aes(y = Daily.Max.8.hour.Ozone.Concentration.1), color = \"blue\", shape = 4, size = 3) +\n  \n  labs(\n  title = \"Daily Max 8-hour Ozone Concentration showing Missing Data (September 2017)\",\n  caption = \"Data collected from Rosenstiel and Perdue stations with intermittent data gaps, likely due to disruptions from Hurricane Irma's impact on monitoring equipment.\",\n  x = \"Date\",\n  y = \"Ozone Concentration (ppm)\"\n) +\n\n  \n  # Set x-axis to show all dates in September\n  scale_x_date(date_breaks = \"1 day\", date_labels = \"%b %d\") +\n  \n  scale_color_manual(values = c(\"Rosenstiel\" = \"green\", \"Perdue\" = \"orange\")) +\n  \n  theme_minimal() +\n  theme(legend.title = element_blank()) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n \n\n\n```\n\n## Plot pre and post hurricane Irma (August, October)\n\n\n\n\n\n\n```{r}\n#| echo: false\n\nlibrary(ggplot2)\nlibrary(dplyr)\n# Load the dataset\nmydata <- read.csv(\"Corrected_Ozone_Data_for_Rosenstiel_and_Perdue_Stations.csv\", stringsAsFactors = FALSE)\n#print(mydata)\n# Convert the Date columns to Date type\nmydata$Date_Rosenstiel <- as.Date(mydata$Date_Rosenstiel, format = \"%m/%d/%Y\")\nmydata$Date_Perdue <- as.Date(mydata$Date_Perdue, format = \"%m/%d/%Y\")\n\n\n\n\n```\n\n\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"Irma-Miami-Dade-Stations.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","bibliography":["references.bib"],"pdf":null,"documentclass":"scrreprt","theme":"cosmo","title":"MiamiDadeStations","author":"Victorious"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}